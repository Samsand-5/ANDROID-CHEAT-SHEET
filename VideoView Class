VideoView class allows you to play video files in Android. 

The Android SDK includes two classes that make video playback implementation on Android devices easy to implement when developing apps.  VideoView can be used to display and play a video in an Android app. 

Whenever you add this component to the layout of an activity, it provides a surface onto which a video may be played. The following video formats are currently supported on Android:

H.263

H.264 AVC

MPEG-4 SP

VP8

Aside from the surface to display a video, the VideoView class has a wide range of methods that may be called in order to control the playback of video. Some of the more commonly used methods are as follows:

setVideoPath(String path)
This specifies the path (as a string) of the video media to be played. This can be either a remote video file URL or a local video file on the device.

setVideoUri(Uri uri)
This function operates the same way as the setVideoPath() method but takes a URI object as an argument instead of a string.

start()
When this function is used, it starts video playback.

stopPlayback() 
This function stops the video playback.

pause() 
This function pauses video playback.

isPlaying () 
This function returns a Boolean value that indicates whether a video is currently playing.

What is MediaController?
The MediaController is the user interface to control the video. 

Specifically, it is a view that contains media controls such as "Play/Pause", "Rewind", "Fast Forward" and a progress slider. It synchronizes the controls with the state of the MediaPlayer. 

The MediaController comes with a default set of controls. If you want to make changes to it, you have to implement the MediaController class programmatically within your Kotlin code. 

You can also use ExoPlayer for audio and video streaming in Android apps, but it is not distributed with the Android SDK. To find out more about this, you can check out the additional readings for this lesson.
